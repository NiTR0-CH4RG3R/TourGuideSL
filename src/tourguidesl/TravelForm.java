/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tourguidesl;

import java.time.LocalDateTime;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public final class TravelForm extends javax.swing.JFrame {

    /**
     * Creates new form travel
     */
    public TravelForm() {
        initComponents();
        LoadClientsToClientDropDown();
        LoadVehiclesToVehicleDropDown();
        LoadDriversToDriverDropDown();
        LoadLocationsToLocationDropDown();
        RefreshTableRecords();
        ClearForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button_back = new javax.swing.JButton();
        drop_down_location = new javax.swing.JComboBox<>();
        drop_down_vehicle = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_records = new javax.swing.JTable();
        text_field_passenger_count = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        button_clear = new javax.swing.JButton();
        button_remove = new javax.swing.JButton();
        button_update = new javax.swing.JButton();
        button_add = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        text_field_time = new javax.swing.JTextField();
        drop_down_driver = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        drop_down_client = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Travel Book");
        setResizable(false);
        setSize(new java.awt.Dimension(600, 800));

        button_back.setText("Back");
        button_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_backActionPerformed(evt);
            }
        });

        drop_down_location.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        drop_down_vehicle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        table_records.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Client Name", "Client Email", "Location", "Passenger Count", "Departure Time", "Vehicle Id", "Driver", "Vehicle Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_records.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_recordsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_records);

        text_field_passenger_count.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        text_field_passenger_count.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_field_passenger_countKeyTyped(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Client :");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Location :");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Passenger Count :");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Vehicle :");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        button_clear.setText("Clear");
        button_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_clearActionPerformed(evt);
            }
        });

        button_remove.setText("Remove");
        button_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_removeActionPerformed(evt);
            }
        });

        button_update.setText("Update");
        button_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_updateActionPerformed(evt);
            }
        });

        button_add.setText("Add");
        button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Travel Book");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Departure Time :");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        drop_down_driver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Driver :");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        drop_down_client.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        drop_down_client.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop_down_clientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(53, 53, 53))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button_clear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_add))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(drop_down_location, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_field_time, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(drop_down_vehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(drop_down_driver, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_field_passenger_count, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(drop_down_client, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button_remove)
                        .addGap(555, 555, 555)
                        .addComponent(button_back))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(drop_down_client, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drop_down_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_field_passenger_count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_field_time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(drop_down_vehicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(drop_down_driver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_clear)
                    .addComponent(button_remove)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(button_add)
                        .addComponent(button_update))
                    .addComponent(button_back))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_backActionPerformed
        this.dispose();
        new Dashboard().setVisible( true );
    }//GEN-LAST:event_button_backActionPerformed

    private void button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addActionPerformed
        try {
            int c_id = GetSelectedClient().GetId();
            int l_id = GetSelectedLocation().GetId();
            int v_id = GetSelectedVehicle().GetId();
            int d_id = GetSelectedDriver().GetId();
            int passanger_count = Integer.valueOf( text_field_passenger_count.getText() );
            LocalDateTime departure_time = Utility.StringToLocalDateTime( text_field_time.getText() );

            TravelEntry entry = new TravelEntry( c_id, l_id, v_id, d_id, passanger_count, departure_time );
            Application.g_app.GetDB().AddTravelEntry( entry );

            RefreshTableRecords();
            ClearForm();
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }//GEN-LAST:event_button_addActionPerformed

    private void button_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_updateActionPerformed
        try {    
            LoadEntryToForm();

            int c_id = GetSelectedClient().GetId();
            int l_id = GetSelectedLocation().GetId();
            int v_id = GetSelectedVehicle().GetId();
            int d_id = GetSelectedDriver().GetId();
            int passanger_count = Integer.valueOf( text_field_passenger_count.getText() );
            LocalDateTime departure_time = Utility.StringToLocalDateTime( text_field_time.getText() );

            TravelEntry entry = new TravelEntry( GetSelectedTravelEntry().GetId(), c_id, l_id, v_id, d_id, passanger_count, departure_time );
            Application.g_app.GetDB().AddTravelEntry( entry );

            RefreshTableRecords();
            ClearForm();
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }//GEN-LAST:event_button_updateActionPerformed

    private void text_field_passenger_countKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_field_passenger_countKeyTyped
        if ( !( Character.isDigit( evt.getKeyChar() ) ) ) evt.consume();
    }//GEN-LAST:event_text_field_passenger_countKeyTyped

    private void drop_down_clientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop_down_clientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drop_down_clientActionPerformed

    private void table_recordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_recordsMouseClicked
        try { 
            LoadEntryToForm();
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }//GEN-LAST:event_table_recordsMouseClicked

    private void button_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_clearActionPerformed
        try {
            ClearForm();
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }//GEN-LAST:event_button_clearActionPerformed

    private void button_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_removeActionPerformed
        try {    
            Application.g_app.GetDB().RemoveTravelEntry( GetSelectedTravelEntry() );
            RefreshTableRecords();
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }//GEN-LAST:event_button_removeActionPerformed

    private void LoadClientsToClientDropDown() {
        try {
            drop_down_client.removeAllItems();

            var clients = Application.g_app.GetDB().GetClients();
            for ( var client : clients ) {
                drop_down_client.addItem( client.toString() );
            }
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }
    
    private Client GetSelectedClient() {
        return Application.g_app.GetDB().GetClients()[drop_down_client.getSelectedIndex() ];
    }
    
    private void LoadDriversToDriverDropDown() {
        try {
            drop_down_driver.removeAllItems();

            var drivers = Application.g_app.GetDB().GetDrivers();
            for ( var driver : drivers ) {
                drop_down_driver.addItem( driver.toString() );
            }
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }
    
    private Driver GetSelectedDriver() {
        return Application.g_app.GetDB().GetDrivers()[drop_down_driver.getSelectedIndex() ];
    }
    
    private void LoadLocationsToLocationDropDown() {
        try {
            drop_down_location.removeAllItems();
            var locations = Application.g_app.GetDB().GetLocations();
            for ( var location : locations ) {
                drop_down_location.addItem( location.toString() );
            }
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }
    
    private Location GetSelectedLocation() {
        return Application.g_app.GetDB().GetLocations()[drop_down_location.getSelectedIndex() ];
    }
    
    private void LoadVehiclesToVehicleDropDown() {
        try {
            drop_down_vehicle.removeAllItems();
            Vehicle vehicles[] = Application.g_app.GetDB().GetVehicles();

            for ( final var vehicle : vehicles ) {
                drop_down_vehicle.addItem( vehicle.toString() );
            }
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }
    
    private Vehicle GetSelectedVehicle() {
        return Application.g_app.GetDB().GetVehicles()[drop_down_vehicle.getSelectedIndex() ];
    }
    
    private TravelEntry GetSelectedTravelEntry() {
        int selected_row = table_records.getSelectedRow();
        int id = Integer.parseInt( table_records.getModel().getValueAt( selected_row, 0 ).toString() );
        return Application.g_app.GetDB().GetTravelEntry(id);
    }
    
    private void RefreshTableRecords() {
        try {
            DefaultTableModel table_model = ( DefaultTableModel ) table_records.getModel();
            table_model.setRowCount( 0 );

            TravelEntry[] entries = Application.g_app.GetDB().GetTravelEntries();
            for ( var entry : entries ) {
                Client client = Application.g_app.GetDB().GetClient( entry.GetCustomerId() );
                Location location = Application.g_app.GetDB().GetLocation( entry.GetLocationId() );
                Driver driver = Application.g_app.GetDB().GetDriver( entry.GetDriverId() );
                Vehicle vehicle = Application.g_app.GetDB().GetVehicle( entry.GetVehicleId() );
                String data[] = { 
                    String.valueOf( entry.GetId() ), 
                    client.GetName(), 
                    client.GetEmail(), 
                    location.GetName(),
                    String.valueOf( entry.GetPassangerCount() ),
                    Utility.LocalDateTimeToString( entry.GetDepartureTime()),
                    String.valueOf( vehicle.GetId() ), 
                    driver.GetName(),
                    vehicle.GetLicensePlate()
                };
                
                table_model.addRow( data );
            }
        }
        catch ( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }
    
    private void LoadEntryToForm() {
        try {
            var entry = GetSelectedTravelEntry();
            drop_down_client.setSelectedItem( Application.g_app.GetDB().GetClient(entry.GetCustomerId()).toString() );
            drop_down_driver.setSelectedItem( Application.g_app.GetDB().GetDriver(entry.GetDriverId()).toString() );
            drop_down_location.setSelectedItem( Application.g_app.GetDB().GetLocation(entry.GetLocationId()).toString() );
            drop_down_vehicle.setSelectedItem( Application.g_app.GetDB().GetVehicle(entry.GetVehicleId()).toString() );
            text_field_passenger_count.setText( String.valueOf(entry.GetPassangerCount()) );
            text_field_time.setText( Utility.LocalDateTimeToString(entry.GetDepartureTime()) );
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }
    
    private void ClearForm() {
        try {
            drop_down_client.setSelectedItem(null);
            drop_down_driver.setSelectedItem(null);
            drop_down_location.setSelectedItem(null);
            drop_down_vehicle.setSelectedItem(null);
            text_field_passenger_count.setText( "" );
            text_field_time.setText( "" );
        }
        catch( Exception e ) {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
    }
    
    public static void main(String[] args) {
        Application.DebugInitApp();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (
                    ClassNotFoundException | 
                    InstantiationException | 
                    IllegalAccessException | 
                    javax.swing.UnsupportedLookAndFeelException
                    e
                )
        {
            System.out.println( "[ERROR] : " + e.getMessage() );
        }
        
        java.awt.EventQueue.invokeLater(() -> {
            new TravelForm().setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_add;
    private javax.swing.JButton button_back;
    private javax.swing.JButton button_clear;
    private javax.swing.JButton button_remove;
    private javax.swing.JButton button_update;
    private javax.swing.JComboBox<String> drop_down_client;
    private javax.swing.JComboBox<String> drop_down_driver;
    private javax.swing.JComboBox<String> drop_down_location;
    private javax.swing.JComboBox<String> drop_down_vehicle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_records;
    private javax.swing.JTextField text_field_passenger_count;
    private javax.swing.JTextField text_field_time;
    // End of variables declaration//GEN-END:variables
}
